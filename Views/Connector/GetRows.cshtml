@model IEnumerable<Dedup.ViewModels.ConnectorConfig>

@{
    ViewData["Title"] = "Dedup Data Steward";
}


@section styles{
    <link rel="stylesheet" href="~/css/pioneerpagenation.min.css" />
    <style type="text/css">
        .expand {
            -webkit-transform: rotate(-90deg);
            -ms-transform: rotate(-90deg);
            -moz-transform: rotate(-90deg);
            -o-transform: rotate(-90deg);
            display: block;
            font-size: 20px;
            font-weight: bold;
        }

        .collapse {
            -webkit-transform: rotate(90deg);
            -ms-transform: rotate(-90deg);
            -moz-transform: rotate(-90deg);
            -o-transform: rotate(-90deg);
            display: block;
            font-size: 20px;
            font-weight: bold;
        }

        table {
            margin: 0 auto;
            width: 100%;
            clear: both;
            border-collapse: collapse;
            table-layout: fixed;
            word-wrap: break-word;
        }

        th, td {
            /*            white-space: nowrap;
        */
            width: 158px;
        }

        #kt_table_1 tr > *:nth-child(1) {
            width: 52px !important;
        }

        #kt_table_2 tr > *:nth-child(1) {
            width: 40px !important;
        }

        #kt_table_3 tr > *:nth-child(1) {
            width: 26px !important;
        }

        #kt_table_3 tr > *:nth-child(2) {
            width: 26px !important;
        }
    </style>
}

@if (Model != null && Model.Count() > 0)
{
    foreach (var item in Model.Select((value, i) => new { i, value }))
    {
        <div class="row" name="etrows" id="@item.value.connectorId" data-isrowsread="@(item.i == 0 ? true : false)">
            @await Component.InvokeAsync("PGRows", new { id = item.value.connectorId, page = 1, isRowsRead = (item.i == 0 ? true : false), connectorConfig = item.value, ctid = ViewBag.ctid })
        </div>
    }
}

@section Scripts{
    <script type="text/javascript">
        var connectorid = $("#connectorid")[0].innerText;

        var params = new window.URLSearchParams(window.location.search);
        var ctid = params.get('ctid');

        $(".fa-times").click(function () {

            window.location.href = "/connector/getrows/" + parseInt(connectorid);
        });
        $('i[name=selectnewParent]').on('click', function (e) {

            //alert("Select New Parent");

            if ($(this)[0].style.color != "yellow") {

                // alert("new");

                var parentrow = $(this).parent().parent()[0]
                //var newctid = parentrow.children[parentrow.children.length - 1].innerText.trim();
                var newctid = $(this).parent()[0].lastElementChild.innerText.trim();
                //alert(newctid);
                showMask();
                $.get("/connector/ConfigureNewParentForDuplicates?id=" + parseInt(connectorid) + "&newctid=" + newctid + "&oldctid=" + ctid, function (data) {

                    console.log(data);
                    //window.location.reload();
                    window.location.href = "/connector/getrows/" + parseInt(connectorid) + "?ctid=" + newctid;

                    //window.location.href = "/connector/GetDuplicateRows/" + parseInt(connectorid) + "?ctid=" + newctid;
                }).always(function () {
                    hideMask();
                });
            }
        })

        $('input[type=checkbox]').change(function () {

            var checboxlength = $('input[type="checkbox"]').length;
            var count = 0;
            for (var i = 0; i < checboxlength; i++) {

                if ($('input[type="checkbox"]')[i].checked == true) {

                    count++;
                }
            }
            if ($("#tabs .ui-tabs-active").text() == "Unique Records") {
                $("#deleteuniquerecord").html("Record selected for delete: " + count);

                if (count > 0) {

                    $('a[name=deleteselectedrecord]').css('opacity', '1');
                    $('a[name=deleteselectedrecord]').css('cursor', 'pointer');

                }
                else {
                    $('a[name=deleteselectedrecord]').css('opacity', '0.1');
                    $('a[name=deleteselectedrecord]').css('cursor', 'none');

                }
            }
            else {

                $("#deleteduplicaterecord").html("Record selected for delete: " + count);

                if (count > 0) {

                    $('a[name=deleteduplicateselectedrecord]').css('opacity', '1');
                    $('a[name=deleteduplicateselectedrecord]').css('cursor', 'pointer');

                }
                else {
                    $('a[name=deleteduplicateselectedrecord]').css('opacity', '0.1');
                    $('a[name=deleteduplicateselectedrecord]').css('cursor', 'none');

                }
            }

        });
        $('a[name=deleteduplicateselectedrecord]').on("click", function (e) {
            if ($('a[name=deleteduplicateselectedrecord]')[0].style.opacity == 1) {
                var checboxlength = $('input[type="checkbox"]').length;
                var count = 0;
                for (var i = 0; i < checboxlength; i++) {

                    if ($('input[type="checkbox"]')[i].checked == true) {

                        count++;
                    }
                }
                var checkitemsctid = [];


                for (var i = 0; i < checboxlength; i++) {

                    if ($('input[type="checkbox"]')[i].checked == true) {

                        var parentrow = $('input[type="checkbox"]').parent().parent()[i];
                        //let obj = {};
                        //obj.ctid = parentrow.children[3].innerText.trim(),

                        //    checitemsctid.push(obj);
                        var length = parentrow.children.length;

                        var ctidobj = {
                            ctid: parentrow.children[length - 1].lastElementChild.innerText.trim()
                        }
                        //queryStr = { "ctidobj": ctidobj }
                        checkitemsctid.push(ctidobj);

                    }
                }

                var itemlist = JSON.stringify(checkitemsctid)
                if ($('a[name=deleteduplicateselectedrecord]')[0].text == "Archieve & Delete All Selected Items") {
                    Swal.fire({
                        //title: 'Are you sure?',
                        //closeOnClickOutside: false,
                        allowOutsideClick: false,
                        allowEnterKey: false,
                        closeOnEsc: false,
                        text: "Selected " + count + " items will be Archived and then permanently deleted from Destination",
                        icon: 'error',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Archieve & Delete'
                    }).then((result) => {
                        if (result.value) {
                            e.preventDefault();
                            showMask();
                            if (itemlist.length > 0) {
                                //showMask()
                                //$.get("/connector/ArchieveRecordBeforeDelete?id=" + parseInt(connectorid) + "&itemlist=" + itemlist, function (data) {
                                //    //hideMask();
                                //    console.log(data);
                                // if (data > 0) {
                                $.get("/connector/DeleteRecordsReviewedByUser?id=" + parseInt(connectorid) + "&itemlist=" + itemlist + "&ctid=" + ctid, function (data) {
                                    //hideMask();
                                    console.log(data);
                                    window.location.reload();
                                }).always(function () {
                                    hideMask();
                                });
                                //window.location.reload();
                                //  }
                                //})

                            }
                            //hideMask();
                        }
                    });
                }
                else {
                    Swal.fire({
                        //title: 'Are you sure?',
                        text: "Selected " + count + " items will be permanently deleted from Destination since you have not selected the backup option in Process configuration",
                        icon: 'error',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Delete permanently'
                    }).then((result) => {
                        if (result.value) {
                            e.preventDefault();
                            showMask();
                            if (itemlist.length > 0) {
                                //showMask();

                                $.get("/connector/DeleteRecordsReviewedByUser?id=" + parseInt(connectorid) + "&itemlist=" + itemlist + "&ctid=" + ctid, function (data) {
                                    //hideMask();
                                    console.log(data);
                                    window.location.reload();
                                }).always(function () {
                                    hideMask();
                                });


                            }
                            //hideMask();
                        }
                    });
                }
            }
        });
        function GetChildRecord(connectorid,ctid) {

            $('#ui-id-3').show();
            //alert(ctid);
            //alert(connectorid, ctid);
            //window.location.href = "/connector/GetDuplicateRows/" + connectorid + "?ctid=" + ctid;
            //$('#ui-id-3').trigger('click');
            //$("#tabs").tabs({ disabled: [0, 1] });
            window.location.href = "/connector/getrows/" + connectorid + "?ctid=" + ctid;

            //$("#tabs").tabs('enable', 0);
            //$("#tabs").tabs('enable', 1);
            //$('#tabs').tabs("option", "disabled", []);
        }

        function updatePaging(container) {

            if ($ && container) {
                $(container).find("ul.pagination")
                    .addClass("pagination pagination-sm no-margin pull-right")
                $(container).find(".box-body .header").click(function () {
                    $header = $(this);
                    $content = $header.next();
                    $content.slideToggle(200, function () {
                        if ($header.find("i").hasClass("collapse")) {

                            var container = $(this).closest("div[name=etrows]");
                            if ($("span[data-rowcount]")) {

                                if (container.attr("data-isrowsread") && container.attr("data-isrowsread").toLowerCase() == "false") {
                                    showMask();
                                    $.ajax({
                                        url: "/connector/getsyncrecordsbypageno/" + container.attr("id") + "?page=1",
                                        method: "GET",
                                        error: function (xhr, status, error) {
                                            hideMask();
                                            console.log(xhr);
                                            console.log(status);
                                            if (status == "timeout") {
                                                container.find("tr[name=emptyrow] td").html("Request timeout!");
                                            }
                                        },
                                        success: function (data) {
                                            container.html(data);
                                            container.attr("data-isrowsread", "true");
                                            updatePaging(container);
                                            $(container).find(".box-body .header").click();
                                            $('#kt_table_1').DataTable(
                                                {
                                                    responsive: true,
                                                    paging: false,
                                                    searching: false,
                                                    columnDefs: [
                                                        {
                                                            orderable: false
                                                        }]
                                                });
                                            hideMask();
                                        },
                                        timeout: 60000 // sets timeout to 1 min
                                    });
                                }
                            }
                            $header.find("i").removeClass("collapse");
                            $header.find("i").addClass("expand");
                        }
                        else {
                            $header.find("i").removeClass("expand");
                            $header.find("i").addClass("collapse");
                        }
                        $header.find("i:last").css({ marginTop: "-10px" });
                    });
                })
                $(container).find("ul.pagination li a").each(function () {
                    var aTag = $(this);
                    var id = $(this).closest("ul").attr("data-id");
                    var pageNo = aTag.attr('href').match(numRegex);
                    var aHref = aTag.attr('href').match(charRegex);
                    if (id && aHref.length > 0 && pageNo.length > 0)
                        aTag.attr('href', aHref[0] + id + '?page=' + pageNo[0]);


                });
                $(container).find("ul.pagination").on("click", "li a", function (e) {
                    e.preventDefault();
                    e.stopPropagation();
                    showMask();
                    var container = $(this).closest("div[name=etrows]");
                    $.ajax({
                        url: $(this).attr("href"),
                        method: "GET",
                        error: function (xhr, status, error) {
                            hideMask();
                            console.log(xhr);
                            console.log(status);
                            if (status == "timeout") {
                                container.find("tr[name=emptyrow] td").html("Request timeout!");
                            }
                        },
                        success: function (data) {
                            container.html(data);
                            updatePaging(container);
                            $(container).find(".box-body .header").click();
                            $('#kt_table_1').DataTable(
                                {
                                    //responsive: true,
                                    paging: false,
                                    searching: false,
                                    scrollX: true,
                                    autoWidth: false,
                                    //columnDefs: [
                                    //    {
                                    //        orderable: false
                                    //    }]
                                    columnDefs: [
                                        {
                                            orderable: false,
                                            targets: 0
                                        }
                                    ],
                                    order: [[1, 'asc']]
                                });
                            var headerrow = $("table > thead > tr")[0];

                            headerrow.children[0].className = "";
                            headerrow.children[0].style.width = "52px";
                            var currentpage = parseInt($(".current")[0].innerText);
                            var totalrecords = $("#totalrecordcount").text().trim();
                            var currentpagerecord = currentpage * 50;

                            if (currentpagerecord > totalrecords) {

                                currentpagerecord = totalrecords;
                            }
                            $("#kt_table_1_info").text("Showing " + (currentpage * 50 - 50 + 1) + " to " + currentpagerecord + " of " + totalrecords + " entries");

                            var marked_for_delete_count = parseInt($("#marked_for_delete_count")[0].innerText);
                            //if (marked_for_delete_count > 0) {

                            //    $('a[name=deleteselectedrecord]').css('opacity', '1');
                            //    $("#recorddelete").html("Records selected for delete: " + marked_for_delete_count);

                            //}
                            //else {
                            //    $('a[name=deleteselectedrecord]').css('opacity', '0.1');
                            //    $("#recorddelete").html("");

                            //}

                            $('a[name=deleteselectedrecord]').on("click", function (e) {
                                if ($('a[name=deleteselectedrecord]')[0].style.opacity == 1) {
                                    if ($('a[name=deleteselectedrecord]')[0].text == "Archieve & Delete All Selected Items") {
                                        Swal.fire({
                                            //title: 'Are you sure?',
                                            text: "All " + marked_for_delete_count + " selected records will be deleted and they will be archieved in database table",
                                            icon: 'error',
                                            showCancelButton: true,
                                            confirmButtonColor: '#3085d6',
                                            cancelButtonColor: '#d33',
                                            confirmButtonText: 'Continue'
                                        }).then((result) => {
                                            if (result.value) {
                                                //e.preventDefault();
                                                //showMask();
                                                //var syncStatusTag = $(this).closest("tr").find("div[name=syncStatus]");
                                                //var params = {
                                                //    id: $(this).attr("data-id"),
                                                //    ccid: $(this).attr("data-uuid")
                                                //};
                                                //$(this).addClass("not-active");
                                                //$.get("/connector/delete?id=" + params.id + "&ccid=" + params.ccid, params, function (data) {
                                                //    //hideMask();
                                                //    console.log(data);
                                                //    window.location.reload();
                                                //}).always(function () {
                                                //    hideMask();
                                                //});
                                                hideMask();
                                            }
                                        });
                                    }
                                    else {
                                        Swal.fire({
                                            //title: 'Are you sure?',
                                            text: "All " + marked_for_delete_count + " selected records will be deleted and they will not be archieved",
                                            icon: 'error',
                                            showCancelButton: true,
                                            confirmButtonColor: '#3085d6',
                                            cancelButtonColor: '#d33',
                                            confirmButtonText: 'Continue'
                                        }).then((result) => {
                                            if (result.value) {
                                                //e.preventDefault();
                                                //showMask();
                                                //var syncStatusTag = $(this).closest("tr").find("div[name=syncStatus]");
                                                //var params = {
                                                //    id: $(this).attr("data-id"),
                                                //    ccid: $(this).attr("data-uuid")
                                                //};
                                                //$(this).addClass("not-active");
                                                //$.get("/connector/delete?id=" + params.id + "&ccid=" + params.ccid, params, function (data) {
                                                //    //hideMask();
                                                //    console.log(data);
                                                //    window.location.reload();
                                                //}).always(function () {
                                                //    hideMask();
                                                //});
                                                hideMask();
                                            }
                                        });
                                    }
                                }
                            });
                            hideMask();
                        },
                        timeout: 60000 // sets timeout to 1 min
                    });
                });
            }

        }

        $(function () {
            $("#tabs").tabs();

            if ($("#kt_table_1 > thead > tr")[0].children.length > 7) {

                $('#kt_table_1').DataTable(
                    {
                        // responsive: true,
                        paging: true,
                        searching: false,
                        scrollX: true,
                        autoWidth: false,
                        //columnDefs: [
                        //    {
                        //        orderable: false
                        //    }]
                        columnDefs: [
                            {
                                orderable: false,
                                targets: 0
                            }
                        ],
                        //scrollCollapse: true,

                        fixedColumns: {
                            leftColumns: 1

                        },
                        order: [[1, 'asc']]
                    });

                $("#kt_table_1").DataTable().columns.adjust().draw();
                $("#kt_table_1").DataTable().draw();

            }
            else {
                $('#kt_table_1').DataTable(
                    {
                        // responsive: true,
                        paging: true,
                        searching: false,
                        scrollX: true,
                        autoWidth: false,
                        //columnDefs: [
                        //    {
                        //        orderable: false
                        //    }]
                        columnDefs: [
                            {
                                orderable: false,
                                targets: 0
                            }
                        ],

                        order: [[1, 'asc']]
                    });



            }

            if ($("#kt_table_2 > thead > tr")[0].children.length > 7) {



                $('#kt_table_2').DataTable(
                    {
                        //scrollY: "300px",
                        scrollX: true,
                        scrollCollapse: true,
                        paging: true,
                        fixedColumns: true,
                        searching: false,
                        //fixedHeader: false,
                    });


                $('.dataTables_scrollBody')[1].style.overflowX = "scroll";

            }
            else {

                $('#kt_table_2').DataTable(
                    {

                        paging: true,
                        searching: false,
                        scrollX: true,
                        autoWidth: false,

                        columnDefs: [
                            {
                                orderable: false,
                                targets: 0
                            }
                        ],

                        order: [[1, 'asc']]
                    });

            }
            var headerrow = $("table > thead > tr")[0];

            headerrow.children[0].className = "";
            headerrow.children[0].style.width = "52px";

            if ($("#kt_table_3 > thead > tr")[0].children.length > 7) {



                $('#kt_table_3').DataTable(
                    {
                        //scrollY: "300px",
                        scrollX: true,
                        scrollCollapse: true,
                        paging: true,
                        fixedColumns: {
                            leftColumns: 2

                        },
                        fixedHeader: {
                            leftColumns: 2,
                            topRows: 1
                        },
                        searching: false,
                        //fixedHeader: false,
                    });
                $('.dataTables_scrollBody')[2].style.overflowX = "scroll";

                //$("#kt_table_3").DataTable().columns.adjust().draw();
                //$("#kt_table_3").DataTable().draw();

            }
            else {

                $('#kt_table_3').DataTable(
                    {

                        paging: true,
                        searching: false,
                        scrollX: true,
                        autoWidth: false,

                        columnDefs: [
                            {
                                orderable: false,
                                targets: 0
                            }
                        ],

                        order: [[1, 'asc']]
                    });

            }

            updatePaging($("div[name=etrows]"));
            if ($(".box-body .header").first().length > 0)
                $(".box-body .header").first().click();

            var marked_for_delete_count = parseInt($("#marked_for_delete_count")[0].innerText);

            $('th, #kt_table_1_paginate').on('click', function (e) {

                var headerrow = $("table > thead > tr")[0];

                headerrow.children[0].className = "";
                headerrow.children[0].style.width = "52px";
            })
            $('th, #kt_table_3_paginate').on('click', function (e) {

                var headerrow = $("table > thead > tr")[2];

                headerrow.children[0].className = "";
                headerrow.children[0].style.width = "40px";
                var checboxlength = $('input[type="checkbox"]').length;

                for (var i = 0; i < checboxlength; i++) {

                    if ($('input[type="checkbox"]')[i].checked == true) {

                        $('input[type="checkbox"]')[i].checked = false;
                    }
                }

                $('a[name=deleteselectedrecord]').css('opacity', '0.1');
                $('a[name=deleteselectedrecord]').css('cursor', 'none');
                $("#deleteuniquerecord").html("Records selected for delete: 0");
                $('a[name=deleteduplicateselectedrecord]').css('opacity', '0.1');
                $('a[name=deleteduplicateselectedrecord]').css('cursor', 'none');
                $("#deleteduplicaterecord").html("Records selected for delete: 0");

                $("#kt_table_2").DataTable().columns.adjust().draw();
                $("#kt_table_2").DataTable().draw();

                if ($("#kt_table_2 > thead > tr")[0].children.length > 7) {
                    $('.dataTables_scrollBody')[1].style.width = "1280px";
                    $('.dataTables_scrollHead')[1].style.width = "1280px";

                    $(".DTFC_Cloned > thead > tr > th")[0].className = "";
                    var fixedcolumn = $(".DTFC_LeftBodyLiner").children()[0];
                    fixedcolumn.children[0].children[0].children[0].className = "";
                }
                if ($("#kt_table_3 > thead > tr")[0].children.length > 7) {

                    $('.dataTables_scrollBody')[2].style.width = "1280px";
                    $('.dataTables_scrollHead')[2].style.width = "1280px";

                    $(".DTFC_Cloned > thead > tr > th")[2].className = "";
                    $(".DTFC_Cloned > thead > tr > th")[3].className = "";
                    var fixedcolumn = $(".DTFC_LeftBodyLiner").children()[1];
                    fixedcolumn.children[0].children[0].children[0].className = "";

                    fixedcolumn.children[0].children[0].children[1].className = "";
                }

            })

            $('#kt_table_2_paginate').on('click', function (e) {

                //$("#kt_table_2").DataTable().columns.adjust().draw();

                //var headerrow = $("table > thead > tr")[2];

                //headerrow.children[0].className = "";
                //headerrow.children[0].style.width = "52px";
                var checboxlength = $('input[type="checkbox"]').length;

                for (var i = 0; i < checboxlength; i++) {

                    if ($('input[type="checkbox"]')[i].checked == true) {

                        $('input[type="checkbox"]')[i].checked = false;
                    }
                }

                $('a[name=deleteselectedrecord]').css('opacity', '0.1');
                $('a[name=deleteselectedrecord]').css('cursor', 'none');
                $("#deleteuniquerecord").html("Records selected for delete: 0");
                //$("#kt_table_2").DataTable().columns.adjust().draw();
                //$("#kt_table_2").DataTable().draw();

                if ($("#kt_table_2 > thead > tr")[0].children.length > 7) {
                    $('.dataTables_scrollBody')[1].style.width = "1280px";
                    $('.dataTables_scrollHead')[1].style.width = "1280px";

                    $(".DTFC_Cloned > thead > tr > th")[0].className = "";
                    var fixedcolumn = $(".DTFC_LeftBodyLiner").children()[0];
                    fixedcolumn.children[0].children[0].children[0].className = "";
                }

            })


            $('select[name = kt_table_1_length]').change(function (e) {
                var headerrow = $("table > thead > tr")[0];

                headerrow.children[0].className = "";
                headerrow.children[0].style.width = "52px";
            });
            $('select[name = kt_table_2_length]').change(function (e) {
                var headerrow = $("table > thead > tr")[2];

                headerrow.children[0].className = "";
                headerrow.children[0].style.width = "40px";
                var checboxlength = $('input[type="checkbox"]').length;

                for (var i = 0; i < checboxlength; i++) {

                    if ($('input[type="checkbox"]')[i].checked == true) {

                        $('input[type="checkbox"]')[i].checked = false;
                    }
                }
                $('a[name=deleteselectedrecord]').css('opacity', '0.1');
                $('a[name=deleteselectedrecord]').css('cursor', 'none');
                $("#deleteuniquerecord").html("Records selected for delete: 0");
                $("#kt_table_2").DataTable().columns.adjust().draw();
                $("#kt_table_2").DataTable().draw();

                if ($("#kt_table_2 > thead > tr")[0].children.length > 7) {
                    $('.dataTables_scrollBody')[1].style.width = "1280px";
                    $('.dataTables_scrollHead')[1].style.width = "1280px";

                    $(".DTFC_Cloned > thead > tr > th")[0].className = "";
                    var fixedcolumn = $(".DTFC_LeftBodyLiner").children()[0];
                    fixedcolumn.children[0].children[0].children[0].className = "";
                }
            });

            $('select[name = kt_table_3_length]').change(function (e) {

                var checboxlength = $('input[type="checkbox"]').length;

                for (var i = 0; i < checboxlength; i++) {

                    if ($('input[type="checkbox"]')[i].checked == true) {

                        $('input[type="checkbox"]')[i].checked = false;
                    }
                }
                $('a[name=deleteduplicateselectedrecord]').css('opacity', '0.1');
                $('a[name=deleteduplicateselectedrecord]').css('cursor', 'none');
                $("#deleteduplicaterecord").html("Records selected for delete: 0");

                if ($("#kt_table_3 > thead > tr")[0].children.length > 7) {

                    $('.dataTables_scrollBody')[2].style.width = "1280px";
                    $('.dataTables_scrollHead')[2].style.width = "1280px";

                    $(".DTFC_Cloned > thead > tr > th")[2].className = "";
                    $(".DTFC_Cloned > thead > tr > th")[3].className = "";
                    var fixedcolumn = $(".DTFC_LeftBodyLiner").children()[1];
                    fixedcolumn.children[0].children[0].children[0].className = "";

                    fixedcolumn.children[0].children[0].children[1].className = "";
                }
            });

            $('#ui-id-1').on("click", function (e) {
                var checboxlength = $('input[type="checkbox"]').length;

                for (var i = 0; i < checboxlength; i++) {

                    if ($('input[type="checkbox"]')[i].checked == true) {

                        $('input[type="checkbox"]')[i].checked = false;
                    }
                }
                $('a[name=deleteselectedrecord]').css('opacity', '0.1');
                $('a[name=deleteselectedrecord]').css('cursor', 'none');
                $("#deleteuniquerecord").html("Records selected for delete: 0");
            });
            $('#ui-id-2').on("click", function (e) {
                //alert();
                $("#kt_table_2").DataTable().columns.adjust().draw();
                $("#kt_table_2").DataTable().draw();
                var headerrow = $("table > thead > tr")[2];

                headerrow.children[0].className = "";
                headerrow.children[0].style.width = "40px";
                $("#kt_table_2").DataTable().columns.adjust().draw();
                $("#kt_table_2").DataTable().draw();
                if ($("#kt_table_2 > thead > tr")[0].children.length > 7) {
                    $('.dataTables_scrollBody')[1].style.width = "1280px";
                    $('.dataTables_scrollHead')[1].style.width = "1280px";

                    $(".DTFC_Cloned > thead > tr > th")[0].className = "";
                    var fixedcolumn = $(".DTFC_LeftBodyLiner").children()[0];
                    fixedcolumn.children[0].children[0].children[0].className = "";
                }

            })

            $('a[name=deleteselectedrecord]').on("click", function (e) {
                if ($('a[name=deleteselectedrecord]')[0].style.opacity == 1) {
                    var checboxlength = $('input[type="checkbox"]').length;
                    var count = 0;
                    for (var i = 0; i < checboxlength; i++) {

                        if ($('input[type="checkbox"]')[i].checked == true) {

                            count++;
                        }
                    }
                    var checkitemsctid = [];


                    for (var i = 0; i < checboxlength; i++) {

                        if ($('input[type="checkbox"]')[i].checked == true) {

                            var parentrow = $('input[type="checkbox"]').parent().parent()[i];

                            var length = parentrow.children.length;

                            var ctidobj = {
                                ctid: parentrow.children[0].lastElementChild.innerText.trim()
                            }
                            checkitemsctid.push(ctidobj);

                        }
                    }

                    var itemlist = JSON.stringify(checkitemsctid)
                    if ($('a[name=deleteselectedrecord]')[0].text == "Archieve & Delete All Selected Items") {
                        Swal.fire({
                            //title: 'Are you sure?',
                            //closeOnClickOutside: false,
                            allowOutsideClick: false,
                            allowEnterKey: false,
                            closeOnEsc: false,
                            text: "Selected " + count + " items will be Archived and then permanently deleted from Destination",
                            icon: 'error',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Archieve & Delete'
                        }).then((result) => {
                            if (result.value) {
                                e.preventDefault();
                                //showMask();
                                if (itemlist.length > 0) {

                                    //$.get("/connector/DeleteRecordsReviewedByUser?id=" + parseInt(connectorid) + "&itemlist=" + itemlist + "&ctid=" + ctid, function (data) {
                                    //    console.log(data);
                                    //    window.location.reload();
                                    //}).always(function () {
                                    //    hideMask();
                                    //});

                                   // alert(itemlist);
                                    Swal.close();
                                }
                            }
                        });
                    }
                    else {
                        Swal.fire({
                            //title: 'Are you sure?',
                            text: "Selected " + count + " items will be permanently deleted from Destination since you have not selected the backup option in Process configuration",
                            icon: 'error',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Delete permanently'
                        }).then((result) => {
                            if (result.value) {
                                e.preventDefault();
                                //showMask();
                                if (itemlist.length > 0) {

                                    //$.get("/connector/DeleteRecordsReviewedByUser?id=" + parseInt(connectorid) + "&itemlist=" + itemlist + "&ctid=" + ctid, function (data) {
                                    //    console.log(data);
                                    //    window.location.reload();
                                    //}).always(function () {
                                    //    hideMask();
                                    //});

                                    //alert(itemlist);
                                    Swal.close();

                                }
                            }
                        });
                    }
                }
            });


            if ('@ViewBag.ctid' == null || '@ViewBag.ctid' == "") {
                $('#ui-id-3').hide();
                $(".fa-times").hide();
            }
            else {
             $('#ui-id-3').trigger('click');
                $("#tabs").tabs({ disabled: [0, 1] });
                $(".fa-times").show();

                var row = $("#kt_table_3").children('tbody').children('tr:first')[0];

                var rowlength = row.children.length;
                if (row.children[rowlength - 1].innerText.trim() == '@ViewBag.ctid') {
                    row.style.fontWeight = "600";
                    var firstcolumnchild = row.children[0];
                    var secondcolumnchild = row.children[1];
                    firstcolumnchild.children[0].disabled = true;
                    firstcolumnchild.children[0].id = "parentrecord";
                    firstcolumnchild.children[0].title = "To delete this, you must assign another record from the list as golden record";
                    secondcolumnchild.children[0].style.color = "yellow";
                    secondcolumnchild.children[0].title = "";
                    //secondcolumnchild.children[0].id = "selectnewParent"
                }

            }
            if ($("#tabs .ui-tabs-active").text() == "Duplicate Records") {

                $("#kt_table_3").DataTable().columns.adjust().draw();
                //$("#kt_table_3").DataTable().draw();
                //var headerrow = $("table > thead > tr")[6];

                //headerrow.children[0].className = "";
                //headerrow.children[0].style.width = "40px";
                //headerrow.children[1].className = "";
                //headerrow.children[1].style.width = "40px";

                //$("#kt_table_3").DataTable().columns.adjust().draw();
                //$("#kt_table_3").DataTable().draw();
                if ($("#kt_table_3 > thead > tr")[0].children.length > 7) {

                    $('.dataTables_scrollBody')[2].style.width = "1280px";
                    $('.dataTables_scrollHead')[2].style.width = "1280px";

                    $(".DTFC_Cloned > thead > tr > th")[2].className = "";
                    $(".DTFC_Cloned > thead > tr > th")[3].className = "";
                    var fixedcolumn = $(".DTFC_LeftBodyLiner").children()[1];
                    fixedcolumn.children[0].children[0].children[0].className = "";

                    fixedcolumn.children[0].children[0].children[1].className = "";
                }

            }

        });
    </script>
}
